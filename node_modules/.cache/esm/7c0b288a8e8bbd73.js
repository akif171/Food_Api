let CustomErrorHandler,JwtService;_8e8‍.x([["default",()=>_8e8‍.o]]);_8e8‍.w("../services/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_8e8‍.w("../services/JwtService",[["default",["JwtService"],function(v){JwtService=v}]]);


const auth = async (req, res, next) => {
  let authHeader = req.headers.authorization;
  _8e8‍.g.console.log(authHeader);

  if (!authHeader) {
    return next(CustomErrorHandler.unAuthorized());
  }

  const token = authHeader.split(" ")[1];
  _8e8‍.g.console.log(token);

  try {
    const { _id, role } = await JwtService.verify(token);

    const user = {
      _id,
      role,
    };

    req.user = user;

    next()
  } catch (error) {
    _8e8‍.g.console.log(error);
  }
};

_8e8‍.d(auth);
